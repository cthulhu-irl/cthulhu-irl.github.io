<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structgviz_1_1mtp_1_1staticptr__caster" kind="struct" language="C++" prot="public">
    <compoundname>gviz::mtp::staticptr_caster</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgviz_1_1mtp_1_1staticptr__caster_1a4fa5e4e4bff1df0e0994ed24d730e393" prot="public" static="no">
        <type>std::add_pointer_t&lt; std::remove_pointer_t&lt; std::remove_reference_t&lt; T &gt; &gt; &gt;</type>
        <definition>using gviz::mtp::staticptr_caster&lt; T &gt;::pointer_type =  std::add_pointer_t&lt;std::remove_pointer_t&lt;std::remove_reference_t&lt;T&gt; &gt;&gt;</definition>
        <argsstring></argsstring>
        <name>pointer_type</name>
        <qualifiedname>gviz::mtp::staticptr_caster::pointer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/mtputils.hpp" line="61" column="3" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/mtputils.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgviz_1_1mtp_1_1staticptr__caster_1a7203b91bd7754960a3138454dbada7dc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>constexpr pointer_type</type>
        <definition>constexpr pointer_type gviz::mtp::staticptr_caster&lt; T &gt;::operator()</definition>
        <argsstring>(U &amp;&amp;arg) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>gviz::mtp::staticptr_caster::operator()</qualifiedname>
        <param>
          <type>U &amp;&amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/mtputils.hpp" line="65" column="26" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/mtputils.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/mtputils.hpp" line="60" column="1" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/mtputils.hpp" bodystart="60" bodyend="69"/>
    <listofallmembers>
      <member refid="structgviz_1_1mtp_1_1staticptr__caster_1a7203b91bd7754960a3138454dbada7dc" prot="public" virt="non-virtual"><scope>gviz::mtp::staticptr_caster</scope><name>operator()</name></member>
      <member refid="structgviz_1_1mtp_1_1staticptr__caster_1a4fa5e4e4bff1df0e0994ed24d730e393" prot="public" virt="non-virtual"><scope>gviz::mtp::staticptr_caster</scope><name>pointer_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
