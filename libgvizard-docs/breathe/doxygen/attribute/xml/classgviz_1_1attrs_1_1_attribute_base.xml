<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classgviz_1_1attrs_1_1_attribute_base" kind="class" language="C++" prot="public">
    <compoundname>gviz::attrs::AttributeBase</compoundname>
    <basecompoundref refid="classgviz_1_1attrs_1_1_i_attribute" prot="public" virt="non-virtual">gviz::attrs::IAttribute</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Derived</type>
      </param>
      <param>
        <type>typename Value</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classgviz_1_1attrs_1_1_attribute_base_1a95ef6d9fd4a9b3148658cb338fdc600e" prot="private" static="no">
        <type>Value</type>
        <definition>using gviz::attrs::AttributeBase&lt; Derived, Value &gt;::value_type =  Value</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>gviz::attrs::AttributeBase::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="19" column="3" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgviz_1_1attrs_1_1_attribute_base_1a9ac4073e2c60b39b75f6da7a096b30d5" prot="protected" static="no" mutable="no">
        <type>value_type</type>
        <definition>value_type gviz::attrs::AttributeBase&lt; Derived, Value &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>gviz::attrs::AttributeBase::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="77" column="14" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a5ce5b8dfced94d8287862c939c4a07f6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::attrs::AttributeBase&lt; Derived, Value &gt;::AttributeBase</definition>
        <argsstring>()</argsstring>
        <name>AttributeBase</name>
        <qualifiedname>gviz::attrs::AttributeBase::AttributeBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="22" column="13" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1af42e4668b8375cc05cb08962695045a3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::attrs::AttributeBase&lt; Derived, Value &gt;::AttributeBase</definition>
        <argsstring>(value_type value)</argsstring>
        <name>AttributeBase</name>
        <qualifiedname>gviz::attrs::AttributeBase::AttributeBase</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="23" column="13" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1aa975a79cde1958a456b39189bea10fa2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>auto</type>
        <definition>auto gviz::attrs::AttributeBase&lt; Derived, Value &gt;::get_name</definition>
        <argsstring>() const noexcept -&gt; const std::string_view override</argsstring>
        <name>get_name</name>
        <qualifiedname>gviz::attrs::AttributeBase::get_name</qualifiedname>
        <reimplements refid="classgviz_1_1attrs_1_1_i_attribute_1a3fd9e632db01736deeba4aaf31aa534b">get_name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="42" column="8" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a246c0003046905de62543c6c69ced6f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool gviz::attrs::AttributeBase&lt; Derived, Value &gt;::is_default</definition>
        <argsstring>() const override</argsstring>
        <name>is_default</name>
        <qualifiedname>gviz::attrs::AttributeBase::is_default</qualifiedname>
        <reimplements refid="classgviz_1_1attrs_1_1_i_attribute_1a25a4bbb388ec0618fcbd85974cce4bdd">is_default</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="47" column="8" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a7b329cd575f834ccd8a65e5198b77b11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void gviz::attrs::AttributeBase&lt; Derived, Value &gt;::reset</definition>
        <argsstring>() override</argsstring>
        <name>reset</name>
        <qualifiedname>gviz::attrs::AttributeBase::reset</qualifiedname>
        <reimplements refid="classgviz_1_1attrs_1_1_i_attribute_1a0cde4e432bbb11a048fa55e4e0fbad65">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="52" column="8" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1ae2dcbfd38546535567dca12a294a55a5" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>value_type &amp;</type>
        <definition>value_type &amp; gviz::attrs::AttributeBase&lt; Derived, Value &gt;::get_value</definition>
        <argsstring>() &amp;</argsstring>
        <name>get_value</name>
        <qualifiedname>gviz::attrs::AttributeBase::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="57" column="21" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a3530b4c6731e8d0882a70dfdf44ed6c9" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>const value_type &amp;</type>
        <definition>const value_type &amp; gviz::attrs::AttributeBase&lt; Derived, Value &gt;::get_value</definition>
        <argsstring>() const &amp;</argsstring>
        <name>get_value</name>
        <qualifiedname>gviz::attrs::AttributeBase::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="58" column="21" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a397e8cfef664a1075c9905d8b366f5cc" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>value_type &amp;&amp;</type>
        <definition>value_type &amp;&amp; gviz::attrs::AttributeBase&lt; Derived, Value &gt;::get_value</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>get_value</name>
        <qualifiedname>gviz::attrs::AttributeBase::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="59" column="20" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a5688567fe17b514d18e95ad8baf0d87f" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>const value_type &amp;&amp;</type>
        <definition>const value_type &amp;&amp; gviz::attrs::AttributeBase&lt; Derived, Value &gt;::get_value</definition>
        <argsstring>() const &amp;&amp;</argsstring>
        <name>get_value</name>
        <qualifiedname>gviz::attrs::AttributeBase::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="60" column="20" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a82d35b7802db61d0d0d6747ec8bd30fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type</type>
        <definition>value_type gviz::attrs::AttributeBase&lt; Derived, Value &gt;::get_default</definition>
        <argsstring>() const</argsstring>
        <name>get_default</name>
        <qualifiedname>gviz::attrs::AttributeBase::get_default</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="62" column="14" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a879b9b79c9e1d0315e99dbd2b2b3a52b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto gviz::attrs::AttributeBase&lt; Derived, Value &gt;::set_value</definition>
        <argsstring>(value_type value) -&gt; std::optional&lt; const value_type &amp; &gt;</argsstring>
        <name>set_value</name>
        <qualifiedname>gviz::attrs::AttributeBase::set_value</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="64" column="8" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1a132813b30502667454c0da1a01a93d40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gviz::attrs::AttributeBase&lt; Derived, Value &gt;::operator value_type</definition>
        <argsstring>() const</argsstring>
        <name>operator value_type</name>
        <qualifiedname>gviz::attrs::AttributeBase::operator value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="74" column="3" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgviz_1_1attrs_1_1_attribute_base_1aaa1190ebae693f4b449bf613c36037c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; Derived &gt;</type>
        <definition>static std::optional&lt; Derived &gt; gviz::attrs::AttributeBase&lt; Derived, Value &gt;::make</definition>
        <argsstring>(value_type value)</argsstring>
        <name>make</name>
        <qualifiedname>gviz::attrs::AttributeBase::make</qualifiedname>
        <param>
          <type>value_type</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="32" column="24" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="32" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>gviz::attrs::AttributeBase&lt; Derived, Value &gt;</label>
        <link refid="classgviz_1_1attrs_1_1_attribute_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gviz::attrs::IAttribute</label>
        <link refid="classgviz_1_1attrs_1_1_i_attribute"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>gviz::attrs::AttributeBase&lt; Derived, Value &gt;</label>
        <link refid="classgviz_1_1attrs_1_1_attribute_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>gviz::attrs::IAttribute</label>
        <link refid="classgviz_1_1attrs_1_1_i_attribute"/>
      </node>
    </collaborationgraph>
    <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" line="18" column="1" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attribute.hpp" bodystart="18" bodyend="78"/>
    <listofallmembers>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a5ce5b8dfced94d8287862c939c4a07f6" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>AttributeBase</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1af42e4668b8375cc05cb08962695045a3" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>AttributeBase</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a82d35b7802db61d0d0d6747ec8bd30fb" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>get_default</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1aa975a79cde1958a456b39189bea10fa2" prot="public" virt="virtual"><scope>gviz::attrs::AttributeBase</scope><name>get_name</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1ae2dcbfd38546535567dca12a294a55a5" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>get_value</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a3530b4c6731e8d0882a70dfdf44ed6c9" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>get_value</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a397e8cfef664a1075c9905d8b366f5cc" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>get_value</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a5688567fe17b514d18e95ad8baf0d87f" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>get_value</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a246c0003046905de62543c6c69ced6f0" prot="public" virt="virtual"><scope>gviz::attrs::AttributeBase</scope><name>is_default</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1aaa1190ebae693f4b449bf613c36037c1" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>make</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a132813b30502667454c0da1a01a93d40" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>operator value_type</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a7b329cd575f834ccd8a65e5198b77b11" prot="public" virt="virtual"><scope>gviz::attrs::AttributeBase</scope><name>reset</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a879b9b79c9e1d0315e99dbd2b2b3a52b" prot="public" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>set_value</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a9ac4073e2c60b39b75f6da7a096b30d5" prot="protected" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>value_</name></member>
      <member refid="classgviz_1_1attrs_1_1_attribute_base_1a95ef6d9fd4a9b3148658cb338fdc600e" prot="private" virt="non-virtual"><scope>gviz::attrs::AttributeBase</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
