<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structgviz_1_1attrs_1_1_layer" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>gviz::attrs::Layer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">AttributeBase&lt; Layer, attrtypes::LayerRange &gt;</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgviz_1_1attrs_1_1_layer_1a5b1dec9762709da91d18dea0a2c7600b" prot="public" static="no">
        <type>attrtypes::LayerRange</type>
        <definition>using gviz::attrs::Layer::value_type =  attrtypes::LayerRange</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>gviz::attrs::Layer::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="10" column="3" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structgviz_1_1attrs_1_1_layer_1a4530a6faa95d42877e1fcc260a9e6a2a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const char *const</type>
        <definition>constexpr const char* const gviz::attrs::Layer::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>gviz::attrs::Layer::name</qualifiedname>
        <initializer>= &quot;layer&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="12" column="38" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgviz_1_1attrs_1_1_layer_1aadc7b482a42831b1885a8c4edb2997fd" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>gviz::attrs::Layer::Layer</definition>
        <argsstring>() noexcept</argsstring>
        <name>Layer</name>
        <qualifiedname>gviz::attrs::Layer::Layer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="14" column="12" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="structgviz_1_1attrs_1_1_layer_1a2cf985d1547c55d7b6c64e281b3a5076" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gviz::attrs::Layer::Layer</definition>
        <argsstring>(const value_type &amp;value)</argsstring>
        <name>Layer</name>
        <qualifiedname>gviz::attrs::Layer::Layer</qualifiedname>
        <param>
          <type>const value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="15" column="12" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="structgviz_1_1attrs_1_1_layer_1ab0e701f1f4e3d921d929e61d0e39803d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gviz::attrs::Layer::Layer</definition>
        <argsstring>(value_type &amp;&amp;value)</argsstring>
        <name>Layer</name>
        <qualifiedname>gviz::attrs::Layer::Layer</qualifiedname>
        <param>
          <type>value_type &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="16" column="12" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structgviz_1_1attrs_1_1_layer_1a135d12916125d75576d5cbeaa234c203" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>value_type</type>
        <definition>static value_type gviz::attrs::Layer::get_default_value</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_default_value</name>
        <qualifiedname>gviz::attrs::Layer::get_default_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="18" column="21" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="structgviz_1_1attrs_1_1_layer_1a925c7041283bb6555e7cdf2f271f7bc1" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool gviz::attrs::Layer::is_default</definition>
        <argsstring>(const value_type &amp;value) noexcept</argsstring>
        <name>is_default</name>
        <qualifiedname>gviz::attrs::Layer::is_default</qualifiedname>
        <param>
          <type>const value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="20" column="15" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="structgviz_1_1attrs_1_1_layer_1a691d1e2d0e66087ebaf17b8e611df4d8" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool gviz::attrs::Layer::constraint</definition>
        <argsstring>(const value_type &amp;) noexcept</argsstring>
        <name>constraint</name>
        <qualifiedname>gviz::attrs::Layer::constraint</qualifiedname>
        <param>
          <type>const value_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="25" column="15" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AttributeBase&lt; Layer, attrtypes::LayerRange &gt;</label>
      </node>
      <node id="1">
        <label>gviz::attrs::Layer</label>
        <link refid="structgviz_1_1attrs_1_1_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AttributeBase&lt; Layer, attrtypes::LayerRange &gt;</label>
      </node>
      <node id="1">
        <label>gviz::attrs::Layer</label>
        <link refid="structgviz_1_1attrs_1_1_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" line="9" column="1" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrs/layer_related.hpp" bodystart="9" bodyend="26"/>
    <listofallmembers>
      <member refid="structgviz_1_1attrs_1_1_layer_1a691d1e2d0e66087ebaf17b8e611df4d8" prot="public" virt="non-virtual"><scope>gviz::attrs::Layer</scope><name>constraint</name></member>
      <member refid="structgviz_1_1attrs_1_1_layer_1a135d12916125d75576d5cbeaa234c203" prot="public" virt="non-virtual"><scope>gviz::attrs::Layer</scope><name>get_default_value</name></member>
      <member refid="structgviz_1_1attrs_1_1_layer_1a925c7041283bb6555e7cdf2f271f7bc1" prot="public" virt="non-virtual"><scope>gviz::attrs::Layer</scope><name>is_default</name></member>
      <member refid="structgviz_1_1attrs_1_1_layer_1aadc7b482a42831b1885a8c4edb2997fd" prot="public" virt="non-virtual"><scope>gviz::attrs::Layer</scope><name>Layer</name></member>
      <member refid="structgviz_1_1attrs_1_1_layer_1a2cf985d1547c55d7b6c64e281b3a5076" prot="public" virt="non-virtual"><scope>gviz::attrs::Layer</scope><name>Layer</name></member>
      <member refid="structgviz_1_1attrs_1_1_layer_1ab0e701f1f4e3d921d929e61d0e39803d" prot="public" virt="non-virtual"><scope>gviz::attrs::Layer</scope><name>Layer</name></member>
      <member refid="structgviz_1_1attrs_1_1_layer_1a4530a6faa95d42877e1fcc260a9e6a2a" prot="public" virt="non-virtual"><scope>gviz::attrs::Layer</scope><name>name</name></member>
      <member refid="structgviz_1_1attrs_1_1_layer_1a5b1dec9762709da91d18dea0a2c7600b" prot="public" virt="non-virtual"><scope>gviz::attrs::Layer</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
