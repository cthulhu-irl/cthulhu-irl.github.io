<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structgviz_1_1attrtypes_1_1_addible" kind="struct" language="C++" prot="public">
    <compoundname>gviz::attrtypes::Addible</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgviz_1_1attrtypes_1_1_addible_1aa35e204ebdcd93a95f834f1e6e33eab3" prot="public" static="no">
        <type>T</type>
        <definition>using gviz::attrtypes::Addible&lt; T &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>gviz::attrtypes::Addible::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="15" column="3" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgviz_1_1attrtypes_1_1_addible_1add3d6526acd68b0468afaef9035001ad" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T gviz::attrtypes::Addible&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>gviz::attrtypes::Addible::value</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="17" column="5" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgviz_1_1attrtypes_1_1_addible_1ae72fc6e80a8d196774d2d1edd0ac7cf4" prot="public" static="no" mutable="no">
        <type>AddibleSign</type>
        <definition>AddibleSign gviz::attrtypes::Addible&lt; T &gt;::addible</definition>
        <argsstring></argsstring>
        <name>addible</name>
        <qualifiedname>gviz::attrtypes::Addible::addible</qualifiedname>
        <initializer>= AddibleSign::neutral</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="18" column="15" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgviz_1_1attrtypes_1_1_addible_1a5d4b13e2eebf7811196f3b8ed441d849" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::attrtypes::Addible&lt; T &gt;::Addible</definition>
        <argsstring>(T value, AddibleSign sign=AddibleSign::neutral)</argsstring>
        <name>Addible</name>
        <qualifiedname>gviz::attrtypes::Addible::Addible</qualifiedname>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>AddibleSign</type>
          <declname>sign</declname>
          <defval>AddibleSign::neutral</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="20" column="13" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="structgviz_1_1attrtypes_1_1_addible_1ab603cb6d3cf9a8cbee274fb485c547d5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T</type>
        <definition>constexpr T gviz::attrtypes::Addible&lt; T &gt;::map</definition>
        <argsstring>(T other) const</argsstring>
        <name>map</name>
        <qualifiedname>gviz::attrtypes::Addible::map</qualifiedname>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="30" column="15" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structgviz_1_1attrtypes_1_1_addible_1a90b4f230b0354cafb29560da00749ee1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool gviz::attrtypes::Addible&lt; T &gt;::operator==</definition>
        <argsstring>(const Addible &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>gviz::attrtypes::Addible::operator==</qualifiedname>
        <param>
          <type>const <ref refid="structgviz_1_1attrtypes_1_1_addible" kindref="compound">Addible</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="35" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structgviz_1_1attrtypes_1_1_addible_1a4c980334597be4eaa10ed22cc94db9b6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool gviz::attrtypes::Addible&lt; T &gt;::operator!=</definition>
        <argsstring>(const Addible &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>gviz::attrtypes::Addible::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="structgviz_1_1attrtypes_1_1_addible" kindref="compound">Addible</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="40" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structgviz_1_1attrtypes_1_1_addible_1a7ccf12ad190ee7c49d7035568748b15e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::attrtypes::Addible&lt; T &gt;::operator value_type</definition>
        <argsstring>() const</argsstring>
        <name>operator value_type</name>
        <qualifiedname>gviz::attrtypes::Addible::operator value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="45" column="13" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structgviz_1_1attrtypes_1_1_addible_1a7e5e617b65703a36f94df22c29f7580c" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto gviz::attrtypes::Addible&lt; T &gt;::make</definition>
        <argsstring>(T value, AddibleSign sign=AddibleSign::neutral)</argsstring>
        <name>make</name>
        <qualifiedname>gviz::attrtypes::Addible::make</qualifiedname>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>AddibleSign</type>
          <declname>sign</declname>
          <defval>AddibleSign::neutral</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="25" column="25" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="25" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" line="14" column="1" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/attrtypes/addible.hpp" bodystart="14" bodyend="46"/>
    <listofallmembers>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1ae72fc6e80a8d196774d2d1edd0ac7cf4" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>addible</name></member>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1a5d4b13e2eebf7811196f3b8ed441d849" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>Addible</name></member>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1a7e5e617b65703a36f94df22c29f7580c" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>make</name></member>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1ab603cb6d3cf9a8cbee274fb485c547d5" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>map</name></member>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1a7ccf12ad190ee7c49d7035568748b15e" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>operator value_type</name></member>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1a4c980334597be4eaa10ed22cc94db9b6" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>operator!=</name></member>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1a90b4f230b0354cafb29560da00749ee1" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>operator==</name></member>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1add3d6526acd68b0468afaef9035001ad" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>value</name></member>
      <member refid="structgviz_1_1attrtypes_1_1_addible_1aa35e204ebdcd93a95f834f1e6e33eab3" prot="public" virt="non-virtual"><scope>gviz::attrtypes::Addible</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
