<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classgviz_1_1detail_1_1_dynamic_square_matrix" kind="class" language="C++" prot="public">
    <compoundname>gviz::detail::DynamicSquareMatrix</compoundname>
    <includes refid="dynamic__square__matrix_8hpp" local="no">dynamic_square_matrix.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Vector</type>
        <defval>std::vector&lt;T&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a4d8a22f5160a64cc11af0facd397c3ad" prot="public" static="no">
        <type>T</type>
        <definition>using gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="25" column="3" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a43be546bdd4706b090055fd550a3cf8d" prot="private" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::vec_</definition>
        <argsstring></argsstring>
        <name>vec_</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::vec_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="21" column="15" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1ac16195655ecc27b7df7bc6e54c680f80" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::size_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="22" column="15" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a1b2d82afdb4d6b74734b7edf0fd7644a" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::DynamicSquareMatrix</definition>
        <argsstring>()</argsstring>
        <name>DynamicSquareMatrix</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::DynamicSquareMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="27" column="22" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1ad029ba09464a1a2e3ecb077f659a37f4" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::DynamicSquareMatrix</definition>
        <argsstring>(std::size_t n)</argsstring>
        <name>DynamicSquareMatrix</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::DynamicSquareMatrix</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="28" column="22" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a23f73493767bfce2fb8ddfe884f3f194" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="30" column="25" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a850cf3782e025fd1959fc5da8eb8d4b4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::resize</definition>
        <argsstring>(std::size_t n, T value=T())</argsstring>
        <name>resize</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::resize</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="32" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1ae441d48ace126da694c8782132efd17d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T &amp;</type>
        <definition>constexpr T &amp; gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::at</definition>
        <argsstring>(std::size_t n, std::size_t m)</argsstring>
        <name>at</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::at</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="38" column="15" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1ace61c28375a93f9a84c2cd53f9f382eb" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const T &amp;</type>
        <definition>constexpr const T &amp; gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::at</definition>
        <argsstring>(std::size_t n, std::size_t m) const</argsstring>
        <name>at</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::at</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="46" column="21" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a4d7f6fd67e6abd67be871b47d125da5f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::add_rowcol</definition>
        <argsstring>(std::size_t count, T value=T())</argsstring>
        <name>add_rowcol</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::add_rowcol</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="54" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a5113006e2cf89bdfef9f5f17966e85d9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::pop_rowcol</definition>
        <argsstring>(std::size_t x)</argsstring>
        <name>pop_rowcol</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::pop_rowcol</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="59" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="59" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1ae1d44852d5ca08bc2fa0df26b807baa6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="88" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a7102ee877bf27eb7075ae331f9c72c45" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="89" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a9eee9cea7955abba0e5277bf7171a006" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const auto</type>
        <definition>constexpr const auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="91" column="24" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a3179e817bb6468e85606d08970edfa42" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const auto</type>
        <definition>constexpr const auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="92" column="24" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a27ed745f72973c302715feef37b8b967" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const auto</type>
        <definition>constexpr const auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::cbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="94" column="24" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a5e0b8c821627d7fd4a17937ae0bfc393" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const auto</type>
        <definition>constexpr const auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::cend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="95" column="24" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a47609cc7ec8c726bec3e11082a468883" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::operator()</definition>
        <argsstring>(std::size_t n, std::size_t m)</argsstring>
        <name>operator()</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::operator()</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="97" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1aee21b525d9c9f805ac6b66d321e6e9ac" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::operator()</definition>
        <argsstring>(std::size_t n, std::size_t m) const</argsstring>
        <name>operator()</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::operator()</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="102" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="102" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a00b79455ebe186456df1b4f93437c651" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::index</definition>
        <argsstring>(std::size_t n, std::size_t m) const noexcept</argsstring>
        <name>index</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::index</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="108" column="25" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1detail_1_1_dynamic_square_matrix_1a54a8b374ff6cd7bd6ea32ac7060e28e9" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::detail::DynamicSquareMatrix&lt; T, Vector &gt;::reverse_index</definition>
        <argsstring>(std::size_t idx) const noexcept -&gt; std::pair&lt; std::size_t, std::size_t &gt;</argsstring>
        <name>reverse_index</name>
        <qualifiedname>gviz::detail::DynamicSquareMatrix::reverse_index</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="117" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="117" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A Dynamically Allocated Only Square Shape Matrix that is suitable for resizing so much...</para>
<para>NOTE: its linear indexing is different, see <computeroutput>index</computeroutput> private function. </para>
    </detaileddescription>
    <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" line="20" column="1" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/graph/dynamic_square_matrix.hpp" bodystart="20" bodyend="126"/>
    <listofallmembers>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a4d7f6fd67e6abd67be871b47d125da5f" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>add_rowcol</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1ae441d48ace126da694c8782132efd17d" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>at</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1ace61c28375a93f9a84c2cd53f9f382eb" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>at</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1ae1d44852d5ca08bc2fa0df26b807baa6" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>begin</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a9eee9cea7955abba0e5277bf7171a006" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>begin</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a27ed745f72973c302715feef37b8b967" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>cbegin</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a5e0b8c821627d7fd4a17937ae0bfc393" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>cend</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a1b2d82afdb4d6b74734b7edf0fd7644a" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>DynamicSquareMatrix</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1ad029ba09464a1a2e3ecb077f659a37f4" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>DynamicSquareMatrix</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a7102ee877bf27eb7075ae331f9c72c45" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>end</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a3179e817bb6468e85606d08970edfa42" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>end</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a00b79455ebe186456df1b4f93437c651" prot="private" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>index</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a47609cc7ec8c726bec3e11082a468883" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>operator()</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1aee21b525d9c9f805ac6b66d321e6e9ac" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>operator()</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a5113006e2cf89bdfef9f5f17966e85d9" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>pop_rowcol</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a850cf3782e025fd1959fc5da8eb8d4b4" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>resize</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a54a8b374ff6cd7bd6ea32ac7060e28e9" prot="private" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>reverse_index</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a23f73493767bfce2fb8ddfe884f3f194" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>size</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1ac16195655ecc27b7df7bc6e54c680f80" prot="private" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>size_</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a4d8a22f5160a64cc11af0facd397c3ad" prot="public" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>value_type</name></member>
      <member refid="classgviz_1_1detail_1_1_dynamic_square_matrix_1a43be546bdd4706b090055fd550a3cf8d" prot="private" virt="non-virtual"><scope>gviz::detail::DynamicSquareMatrix</scope><name>vec_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
