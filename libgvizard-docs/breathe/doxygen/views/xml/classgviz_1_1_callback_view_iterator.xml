<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classgviz_1_1_callback_view_iterator" kind="class" language="C++" prot="public">
    <compoundname>gviz::CallbackViewIterator</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename F</type>
      </param>
      <param>
        <type>std::enable_if_t&lt; std::is_invocable_v&lt; F, T &gt;, bool &gt;</type>
        <defval>true</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgviz_1_1_callback_view_iterator_1a06661875c0b41be5bb4f81f351b44d35" prot="public" static="no">
        <type>F</type>
        <definition>using gviz::CallbackViewIterator&lt; T, F, &gt;::AdvanceCallback =  F</definition>
        <argsstring></argsstring>
        <name>AdvanceCallback</name>
        <qualifiedname>gviz::CallbackViewIterator::AdvanceCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="15" column="3" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgviz_1_1_callback_view_iterator_1a9737c7fde3998e6490e0317b68fcde9c" prot="private" static="no" mutable="no">
        <type>AdvanceCallback</type>
        <definition>AdvanceCallback gviz::CallbackViewIterator&lt; T, F, &gt;::advance_</definition>
        <argsstring></argsstring>
        <name>advance_</name>
        <qualifiedname>gviz::CallbackViewIterator::advance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="18" column="20" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgviz_1_1_callback_view_iterator_1a69fc5d3255ea451d6b85794b6cf6020a" prot="private" static="no" mutable="no">
        <type>std::optional&lt; T &gt;</type>
        <definition>std::optional&lt;T&gt; gviz::CallbackViewIterator&lt; T, F, &gt;::current_</definition>
        <argsstring></argsstring>
        <name>current_</name>
        <qualifiedname>gviz::CallbackViewIterator::current_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="19" column="17" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1a36543eed8afd068e1c89a32365ac7ce6" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::CallbackViewIterator&lt; T, F, &gt;::CallbackViewIterator</definition>
        <argsstring>(AdvanceCallback callback)</argsstring>
        <name>CallbackViewIterator</name>
        <qualifiedname>gviz::CallbackViewIterator::CallbackViewIterator</qualifiedname>
        <param>
          <type>AdvanceCallback</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="22" column="22" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1a3eb6c269062db906f636a7da003b21e8" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::CallbackViewIterator&lt; T, F, &gt;::CallbackViewIterator</definition>
        <argsstring>(AdvanceCallback callback, std::optional&lt; T &gt; init)</argsstring>
        <name>CallbackViewIterator</name>
        <qualifiedname>gviz::CallbackViewIterator::CallbackViewIterator</qualifiedname>
        <param>
          <type>AdvanceCallback</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>std::optional&lt; T &gt;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="27" column="22" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1aa48a7b5c743410e1900613e96f3ba07e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::has_value</definition>
        <argsstring>() noexcept -&gt; bool</argsstring>
        <name>has_value</name>
        <qualifiedname>gviz::CallbackViewIterator::has_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="33" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1a338fb23ff83b66798c233cda56d1a064" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::next</definition>
        <argsstring>() -&gt; CallbackViewIterator</argsstring>
        <name>next</name>
        <qualifiedname>gviz::CallbackViewIterator::next</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="38" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1ab2cb30f261d0e1ecd610ce3679327bd9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::next</definition>
        <argsstring>() const -&gt; CallbackViewIterator</argsstring>
        <name>next</name>
        <qualifiedname>gviz::CallbackViewIterator::next</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="46" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="46" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1a2bb017316772f1d9ec097656e89d3214" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::operator++</definition>
        <argsstring>() -&gt; CallbackViewIterator</argsstring>
        <name>operator++</name>
        <qualifiedname>gviz::CallbackViewIterator::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="57" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1acdfccb67ae250d69542d5e6b3bc5141e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::operator++</definition>
        <argsstring>(int) -&gt; CallbackViewIterator</argsstring>
        <name>operator++</name>
        <qualifiedname>gviz::CallbackViewIterator::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="59" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1a9e9f19323476b7069318d22274bc5c33" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>gviz::CallbackViewIterator::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="65" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1a60918be0d5802790172a49d75c17cb95" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>gviz::CallbackViewIterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="66" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1aef749d82aae469bfb023e7968dd5d47d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::operator==</definition>
        <argsstring>(const CallbackViewIterator &amp;other)</argsstring>
        <name>operator==</name>
        <qualifiedname>gviz::CallbackViewIterator::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classgviz_1_1_callback_view_iterator" kindref="compound">CallbackViewIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="68" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1aae95edb2b4b20f5856ae31cbab7f822b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto gviz::CallbackViewIterator&lt; T, F, &gt;::operator!=</definition>
        <argsstring>(const CallbackViewIterator &amp;other)</argsstring>
        <name>operator!=</name>
        <qualifiedname>gviz::CallbackViewIterator::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classgviz_1_1_callback_view_iterator" kindref="compound">CallbackViewIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="73" column="18" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classgviz_1_1_callback_view_iterator_1ae7be5a4ea76d02b916d8efc4f415c7f3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr gviz::CallbackViewIterator&lt; T, F, &gt;::operator bool</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>gviz::CallbackViewIterator::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="78" column="13" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" line="13" column="1" bodyfile="/home/cthulhu/projects/repos/libgvizard/include/gvizard/views.hpp" bodystart="13" bodyend="79"/>
    <listofallmembers>
      <member refid="classgviz_1_1_callback_view_iterator_1a9737c7fde3998e6490e0317b68fcde9c" prot="private" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>advance_</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1a06661875c0b41be5bb4f81f351b44d35" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>AdvanceCallback</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1a36543eed8afd068e1c89a32365ac7ce6" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>CallbackViewIterator</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1a3eb6c269062db906f636a7da003b21e8" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>CallbackViewIterator</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1a69fc5d3255ea451d6b85794b6cf6020a" prot="private" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>current_</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1aa48a7b5c743410e1900613e96f3ba07e" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>has_value</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1a338fb23ff83b66798c233cda56d1a064" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>next</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1ab2cb30f261d0e1ecd610ce3679327bd9" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>next</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1ae7be5a4ea76d02b916d8efc4f415c7f3" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>operator bool</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1aae95edb2b4b20f5856ae31cbab7f822b" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>operator!=</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1a60918be0d5802790172a49d75c17cb95" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>operator*</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1a2bb017316772f1d9ec097656e89d3214" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>operator++</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1acdfccb67ae250d69542d5e6b3bc5141e" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>operator++</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1a9e9f19323476b7069318d22274bc5c33" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>operator-&gt;</name></member>
      <member refid="classgviz_1_1_callback_view_iterator_1aef749d82aae469bfb023e7968dd5d47d" prot="public" virt="non-virtual"><scope>gviz::CallbackViewIterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
